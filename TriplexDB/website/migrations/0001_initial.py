# Generated by Django 4.2.3 on 2023-07-31 13:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DNA',
            fields=[
                ('promoterid', models.CharField(db_column='PromoterID', max_length=150, primary_key=True, serialize=False)),
                ('promotertranscriptids', models.CharField(blank=True, db_column='PromoterTranscriptIDs', max_length=150, null=True)),
                ('promotergeneids', models.CharField(blank=True, db_column='PromoterGeneIDs', max_length=150, null=True)),
                ('promotersymbols', models.CharField(blank=True, db_column='PromoterSymbols', max_length=150, null=True)),
                ('promoterchr', models.CharField(blank=True, db_column='PromoterChr', max_length=150, null=True)),
                ('promoterstart', models.IntegerField(blank=True, db_column='PromoterStart', max_length=150, null=True)),
                ('promoterend', models.IntegerField(blank=True, db_column='PromoterEnd', max_length=150, null=True)),
                ('promoterlength', models.IntegerField(blank=True, db_column='PromoterLength', max_length=150, null=True)),
            ],
            options={
                'db_table': 'DNA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField()),
            ],
            options={
                'db_table': 'polls_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PollsQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'polls_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RNA',
            fields=[
                ('transcriptid', models.CharField(db_column='TranscriptID', max_length=150, primary_key=True, serialize=False)),
                ('transcriptgeneid', models.CharField(blank=True, db_column='TranscriptGeneID', max_length=150, null=True)),
                ('transcriptgenesymbol', models.CharField(blank=True, db_column='TranscriptGeneSymbol', max_length=150, null=True)),
                ('transcriptchr', models.CharField(blank=True, db_column='TranscriptChr', max_length=150, null=True)),
                ('transcriptstart', models.IntegerField(blank=True, db_column='TranscriptStart', max_length=150, null=True)),
                ('transcriptend', models.IntegerField(blank=True, db_column='TranscriptEnd', max_length=150, null=True)),
                ('transcriptlength', models.IntegerField(blank=True, db_column='TranscriptLength', max_length=150, null=True)),
                ('transcriptbiotype', models.CharField(blank=True, db_column='TranscriptBiotype', max_length=150, null=True)),
            ],
            options={
                'db_table': 'RNA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriplexAligner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transcriptid', models.CharField(db_column='TranscriptID', max_length=150)),
                ('promoterid', models.CharField(db_column='PromoterID', max_length=150)),
                ('transcripttriplexstart', models.IntegerField(blank=True, db_column='TranscriptTriplexStart', max_length=150, null=True)),
                ('transcripttriplexend', models.IntegerField(blank=True, db_column='TranscriptTriplexEnd', max_length=150, null=True)),
                ('promotertriplexstart', models.IntegerField(blank=True, db_column='PromoterTriplexStart', max_length=150, null=True)),
                ('promotertriplexend', models.IntegerField(blank=True, db_column='PromoterTriplexEnd', max_length=150, null=True)),
                ('transcriptlength', models.IntegerField(blank=True, db_column='TranscriptLength', max_length=150, null=True)),
                ('promoterlength', models.IntegerField(blank=True, db_column='PromoterLength', max_length=150, null=True)),
                ('triplexalignerscore', models.FloatField(blank=True, db_column='TriplexAlignerScore', max_length=150, null=True)),
                ('lambda_field', models.FloatField(blank=True, db_column='Lambda', max_length=150, null=True)),
                ('k', models.FloatField(blank=True, db_column='K', max_length=150, null=True)),
                ('triplexalignerbitscore', models.FloatField(blank=True, db_column='TriplexAlignerBitScore', max_length=150, null=True)),
                ('triplexalignere', models.FloatField(blank=True, db_column='TriplexAlignerE', max_length=150, null=True)),
            ],
            options={
                'db_table': 'TriplexAligner',
                'managed': False,
            },
        ),
    ]
